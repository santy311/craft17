#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Sat Aug 26 17:09:27 2017

@author: root
"""

import pandas as pd
import numpy as np

df={ courses: 
   [ { instructors: [Object],
       subtitle: 'Fetch Data Asynchronously',
       key: 'ud109',
       image: 'https://lh3.googleusercontent.com/h_7AQcoVTkMbJ3CN3m1eRnzB37OLz7t5RzYh3_W02nUP2sFDbVJH4-BO4xhdadPx3mCELU2ZoPBp6lE1gpk=s0#w=1702&h=958',
       expected_duration_high: 0,
       expected_learning: 'Retrieving data asynchronously is now the norm with apps like Twitter, Facebook, and Google sending and retrieving mountains of data without having to stop and wait for processes to finish or to reload the page. Create smooth, modern web applications by using Ajax techniques to retrieve data asynchronously.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Asynchronous JavaScript Requests',
       related_degree_keys: [],
       expected_duration_low: 3,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'This course is ideal for students with intermediate level knowledge of JavaScript. You should have experience working with JavaScript\'s Object Oriented (prototypal inheritance) capabilities and using native JavaScript Promises. To brush up on these skills, check out these courses:\n \n* [Object Oriented JavaScript](https://www.udacity.com/course/object-oriented-javascript--ud015)\n* [Promises](https://www.udacity.com/course/javascript-promises--ud898)',
       syllabus: 'This course covers everything a developer needs to know to asynchronously send and receive data in their web applications. You\'ll dive into how asynchronous requests work by using the XHR object to create and send asynchronous requests. Then, you\'ll see how you can perform async requests more easily using the third-party library, jQuery, with its `$.ajax()` method. And you\'ll learn the cutting edge way to make asynchronous requests using the new Fetch API.\n\n## Lesson 1: Ajax with XHR\n* Learn why you should use asynchronous data requests\n* Use the XHR (XMLHTTPRequest) object to send and receive data asynchronously\n\n## Lesson 2: Ajax with jQuery\n* Compare using XHR with using a third-party library like jQuery\'s Ajax\n* Send and receive data using jQuery\'s Ajax methods\n* Learn how jQuery\'s Ajax works under the hood\n\n## Lesson 3: Ajax with Fetch\n* Use JavaScript promises to create a fetch request and handle the data asynchronously\n* Learn how to handle errors for failed requests',
       assistants: [],
       new_release: true,
       available: true,
       project_description: '',
       tags: [Object],
       full_course_available: false,
       faq: '',
       affiliates: [],
       tracks: [Object],
       banner_image: '',
       short_summary: 'Learn how to asynchronously request data in your web applications with Ajax.',
       slug: 'asynchronous-javascript-requests--ud109',
       starter: false,
       open_for_enrollment: false,
       level: 'intermediate',
       expected_duration_unit: 'weeks',
       summary: 'This course covers everything a developer needs to know to asynchronously send and receive data in their web applications. You\'ll dive into how asynchronous requests work by using the XHR object to create and send asynchronous requests for image and news article data. Then, you\'ll see how you can perform async requests more easily using third-party libraries and APIs like jQuery\'s Ajax and the Fetch API.',
       enables_profiles: false,
       expected_duration: 3 },
     { instructors: [Object],
       subtitle: 'Learn features and constructs for C++',
       key: 'ud210',
       image: 'https://lh3.googleusercontent.com/tLdCHkqdJq00FNnEera7nAmYmH7aRs7jeTJU48QRkUjR0wT705g8aHkAWy0ZViZyiKgkYCmKCJK8s4q82Tg=s0#w=1210&h=796',
       expected_duration_high: 0,
       expected_learning: 'Anyone wishing to quickly learn how to program in C++ will find this course to be quite satisfactory.  You will quickly learn to program in C++ by learning the essentials of the language. \nYou will also get to hear different approaches and perspectives regarding using C++ as a professional.\n\nThis course does not offer in depth discussions of C++, nor does it offer a lot of alternative/advanced methods.   It focuses on preparing the student to  program in C++ with the minimum expenditure of time.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'C++ For Programmers',
       related_degree_keys: [],
       expected_duration_low: 3,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'There is one prerequisite for this course: familiarity with another programming language.',
       syllabus: 'The course outline:\n\n- The Basics<br>\n You will learn basic C++ program structure, header files, file IO and strings.\n- Compilation and Execution. <br>\n You will learn how to compile and execute C++ code on your own machine.\n- Arithmetic Operations<br>\nYou will learn the most commonly used arithmetic operations in C++. <br>\n- Control Flow<br>\nYou will learn C++ logic, looping and switch statements.<br>\n- Pointers<br>\nYou will learn the basics of what a pointer is and how it is used.\n- Arrays<br>\nYou will learn how to declare and use arrays and multi-dimensional arrays.\n- Functions<br>\nYou will learn how to create functions using parameters and return values and how to pass parameters by reference. \n- Classes<br>\nYou will learn to create classes and instantiate class objects in this basic introduction to classes. \n- Overloading<br>\nYou will learn how to overload classes and operators in C++. \n- Templates<br>\nYou will learn how to provide generic programming through function templates and class templates.\n- Classes and Inheritance<br>\nYou will learn how to derive classes in C++ using inheritance and multiple inheritance.\n- Classes and polymorphism<br>\nYou will learn what polymorphism is and how to use it in C++.\n- Vectors and Iterators<br>\nYou will how to use features of the *vector*  library and how to iterate through vectors.',
       assistants: [Object],
       new_release: false,
       available: true,
       project_description: '',
       tags: [],
       full_course_available: false,
       faq: '',
       affiliates: [],
       tracks: [Object],
       banner_image: '',
       short_summary: 'This course teaches C++ to students already familiar with a programming language. \nStudents will learn how to use header files, control flow, functions, classes.',
       slug: 'c-for-programmers--ud210',
       starter: false,
       open_for_enrollment: false,
       level: 'intermediate',
       expected_duration_unit: 'weeks',
       summary: 'C++ for Programmers is designed for students who are familiar with a programming language and wish to learn C++.\n\nThis course focuses on \'how\' as opposed to \'what\'. For example, in the lesson on functions, we do not teach what a function is, but rather how to create a function in C++.\nThe lessons are taught by several different instructors who have used C++ in their professional careers, so students get to experience different perspectives. \n\nThe course also includes comments and tips from Bjarne Stroustrup - the original designer of C++.',
       enables_profiles: false,
       expected_duration: 3 },
     { instructors: [Object],
       subtitle: 'Starting Out in Python 3',
       key: 'ud1110',
       image: 'https://lh3.googleusercontent.com/qMlvtmVMUyEk45ZvrvflDGlnt4sSRUgtSDJ-juoeVOkz2k6AusYESjZ7CvptU1flNgINinPR0qOJjuB2vL0=s0#w=1268&h=780',
       expected_duration_high: 0,
       expected_learning: 'Python is one of the most popular languages today, used for a wide range of fields, from web programming, to data science, to robotics. With a strong foundation in Python programming, you\'ll have a good start in any of these career paths.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Introduction to Python',
       related_degree_keys: [],
       expected_duration_low: 5,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'This course is meant to bring you up to speed in Python. It assumes that you are already familiar with fundamental programming concepts such as "variable", "loop", and "function".\n\nIf you have completed an introductory programming course in any other language (such as JavaScript, Java, or Ruby), you\'re ready for this course.\n\nTo complete the exercises in this course, you will need a computer on which you can run Python code. If you can [install Python](https://www.python.org/downloads/) on your computer, you can use it for this course.\n\nThis course uses Python 3.',
       syllabus: '### Numbers and Strings\n* Learn about Python\'s numeric and string data types\n* Use variables to store data\n* Use built-in functions and methods\n\n### Functions, Installation, and Conditionals\n* Install Python on your computer\n* Organize your code into functions\n* Use conditionals to make decisions\n\n### Data Structures and Loops\n* Use collection data types: lists, sets, and dictionaries\n* Write `for` and `while` loops to express repetition\n* Practice refactoring and problem solving\n\n### Files and Modules\n* Use modules from the Python standard library and from third-party libraries\n* Read data from files on disk\n* Use online resources to help solve problems.\n\n### Wikipedia Web Crawl Case Study\n* Apply the skills you\'ve learned in this course to explore real-world data from the web\n* Write a web crawler that follows links between Wikipedia articles',
       assistants: [],
       new_release: true,
       available: true,
       project_description: '',
       tags: [Object],
       full_course_available: false,
       faq: '',
       affiliates: [],
       tracks: [Object],
       banner_image: '',
       short_summary: 'Python is one of the most popular programming languages in the world. If you already know another language and want to expand to Python, this is the course for you!',
       slug: 'introduction-to-python--ud1110',
       starter: false,
       open_for_enrollment: false,
       level: 'beginner',
       expected_duration_unit: 'weeks',
       summary: 'Get started writing Python with this introductory course.',
       enables_profiles: false,
       expected_duration: 5 },
     { instructors: [Object],
       subtitle: 'Offered at Georgia Tech as CS 6601',
       key: 'ud954',
       image: 'https://lh3.googleusercontent.com/fDkrEfgd1GdtBiLTwr6C0AqxCGhrKQlUfZ5LxAUf69P0YZ-rCU4H7KL60sZMtQCGDD8wJeA_CWPFC3lacQ=s0#w=1280&h=720',
       expected_duration_high: 0,
       expected_learning: 'Artificial Intelligence is poised to become one of the most revolutionary technologies of our time. We interact with intelligent systems and services in various forms, including apps on our phones, websites, devices, etc. With that, the demand for AI Engineers is on the rise. Take this course to understand the fundamental concepts and algorithms behind artificial intelligence, and learn to apply them to various real-world problems including game playing, navigation, sign-language recognition, et al.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Artificial Intelligence',
       related_degree_keys: [],
       expected_duration_low: 4,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'Undergraduate computer algorithm and data structures courses that cover O notation, time and space constraints; working knowledge of college level mathematics such as calculus, probability, and linear algebra. You will also need to be familiar with Python and be comfortable making modifications to large programs.\n\nPlease review the following questions, if you answer “no” to any of them you may want to refresh your knowledge or practice the required skills prior to taking the class:  \n\n* Are you comfortable programming in Python, including IPython notebooks? If not, are you comfortable in learning a language within the first week of class?\n* Have you taken several classes that required intensive programming?\n* Have you taken algorithms and data structures courses?\n* Are you prepared to spend at least 9 hours a week on this class?',
       syllabus: '### Search\n- Game Playing\n- Basics of Search\n- Logic and Planning\n\n### Constraints and Bayes Nets\n- Constraint Satisfaction\n- Probability\n- Bayes Nets\n\n### Basics of Machine Learning\n- Simulated Annealing\n- Machine Learning\n- Pattern Recognition through Time',
       assistants: [],
       new_release: false,
       available: true,
       project_description: '',
       tags: [],
       full_course_available: false,
       faq: '',
       affiliates: [Object],
       tracks: [Object],
       banner_image: '',
       short_summary: 'This course gives a survey of topics in AI along with in-depth foundational concepts such as classical search, probability, machine learning, logic and planning.',
       slug: 'artificial-intelligence--ud954',
       starter: false,
       open_for_enrollment: false,
       level: 'intermediate',
       expected_duration_unit: 'months',
       summary: 'Learn about the fundamentals of Artificial Intelligence in this introductory graduate-level course. It provides a survey of various topics in the field along with in-depth discussion of foundational concepts such as classical search, probability, machine learning, logic and planning.',
       enables_profiles: false,
       expected_duration: 4 },
     { instructors: [],
       subtitle: 'Offered at Georgia Tech as CSE 6242',
       key: 'ud404',
       image: 'https://lh3.googleusercontent.com/FeFIlUq6mrW8Qe-sQG4iYD-F6Q8zJEB7pwdhKdizbDMZhI3Y5dXEdcHn3EiMV8X6kiDqbfGk51GSPz8bZQ=s0#w=1280&h=720',
       expected_duration_high: 0,
       expected_learning: 'You should take this course if you want to cover the state of the art in data modeling and visualization techniques using the R programming language.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Data Analysis and Visualization',
       related_degree_keys: [],
       expected_duration_low: 16,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: '* Programming experience\n* Mathematics: basic linear algebra, calculus, introductory probability \n* No background in machine learning is required',
       syllabus: '### Programming in R\n- The R Programming Language\n- R Programming Syntax\n- R Programming and Data Structures\n\n### Data Analysis\n- Data Preprocessing\n- Data Processing\n- Data Visualization\n\n### Regression\n- Logistic Regression\n- Linear Regression\n- Regularization',
       assistants: [Object],
       new_release: false,
       available: true,
       project_description: '',
       tags: [],
       full_course_available: false,
       faq: '',
       affiliates: [Object],
       tracks: [Object],
       banner_image: '',
       short_summary: 'This course will introduce students to the field by covering state­-of-­the-art modeling, analysis and visualization techniques.',
       slug: 'data-analysis-and-visualization--ud404',
       starter: false,
       open_for_enrollment: false,
       level: 'intermediate',
       expected_duration_unit: 'weeks',
       summary: 'Data and visual analytics is an emerging field concerned with analyzing, modeling, and visualizing complex high dimensional data. \n\nThis course will introduce students to the field by covering state­-of-­the-art modeling, analysis and visualization techniques. It will emphasize practical challenges involving complex real world data and include several case studies and hands-on work with the R programming language.',
       enables_profiles: false,
       expected_duration: 16 },
     { instructors: [],
       subtitle: 'Making Products Work for Users Worldwide',
       key: 'ud610',
       image: 'https://lh3.googleusercontent.com/_6xJ9ZkZP7ELmRX0GNC8idrG0lUoYatE4qnjFJo6wCi4V2X8pznki35L3jYcLxROrxLwK_pPYRtR9-4n3Q=s0#w=2738&h=1526',
       expected_duration_high: 0,
       expected_learning: 'For translation students and freelance translators, it’s a great opportunity to get specialized knowledge and skills in a still lesser-known field that is becoming increasingly important. This course will enrich your resume, open up new business opportunities and it will allow you to change or expand your field of specialization. \n\nDevelopers will learn about localization basics and gain an understanding of how to launch applications and products in international markets. This course will also shed light on the potential challenges and issues you might run into, while providing known solutions, and which stakeholders need to be involved in a product launch to make it internationally successful.\n\nEntrepreneurs and business owners will understand why localization is important for the international expansion and success of their companies, also learning which professionals their companies need to rely on, which technologies to use and how to organize localization processes to launch successful products globally.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Localization Essentials',
       related_degree_keys: [],
       expected_duration_low: 2,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'Students should have basic computer skills: managing files, navigating the internet and running programs and applications. During the course, students will be asked to perform operations on a computer, so you should have access to a computer that is able to run a Chrome browser. Students will also have the opportunity to try and use a CAT Tool, GTT, freely available with a Google account.',
       syllabus: '### Key Concepts\n- Learn about the history of localization broadly and at Google. \n- Explore the power of localization and cover key concepts and definitions you’ll need throughout this course.\n\n### Content Types\n- See what localization looks like in practice.\n- Learn how professionals approach the localization of different content types from online help documents, to the actual user interface of an app or software.\n\n### Profiles and Skills\n- Meet some of the localization professionals at Google.\n- Learn about different roles and profiles of localization team members and the skills required.\n\n### Processes\n- Focus on the series of steps involved in localization project preparation, execution, testing and launch.\n\n### Tools\n- Learn about the different types of tools involved at every stage of the localization process and how they work together.',
       assistants: [],
       new_release: false,
       available: true,
       project_description: '',
       tags: [],
       full_course_available: false,
       faq: '',
       affiliates: [Object],
       tracks: [Object],
       banner_image: '',
       short_summary: 'Localization is about making a product feel tailored to users around the world. Specifically, it is the process of adapting a product to a language, culture and market.',
       slug: 'localization-essentials--ud610',
       starter: false,
       open_for_enrollment: false,
       level: 'beginner',
       expected_duration_unit: 'weeks',
       summary: 'So, what is localization? In the world of information technology, localization means translating and adapting a product or service to a particular language, culture, and geographic market.\n\nThere are two main aspects to localization. The first one is stylistic: You have to make sure the language tone you use is appropriate for each local culture. There’s also a technical aspect: You may have to make changes to things like date and time formats, alphabetization, or even the direction of reading, to make them appropriate for the language you’re localizing into. So localization means more than just translating a message or text, it’s about making a whole product feel tailored to users everywhere. \n\nThis need for localized content has made the language industry the 4th fastest growing industry in the world with a global size of an estimated $40 billion. More people across the globe are coming online, and they need to be able to use technology in a language they understand. That’s what localization is all about.',
       enables_profiles: false,
       expected_duration: 2 },
     { instructors: [Object],
       subtitle: 'Offered at Georgia Tech as 6750',
       key: 'ud400',
       image: 'https://lh3.googleusercontent.com/Q4TStFYcMPHKoSPAdx1ntatsGGVHhVWa2EfPRtuiI9_iozTuH8IqpKXM-CPr0sbtlQ2CdMF-7u278ncEePdL=s0#w=1280&h=720',
       expected_duration_high: 0,
       expected_learning: 'The class covers three broad categories of topics within human-computer interaction: (a) the principles and characteristics of the interaction between humans and computers; (b) the techniques for designing and evaluating user-centered systems; and (c) current areas of cutting-edge research and development in human-computer interaction.\n\nAlthough the free version of this course does not include any assessments, you are welcome to [follow along with the assignments that Georgia Tech students complete](http://omscs6750.gatech.edu/) as part of enrollment in this course.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Human-Computer Interaction',
       related_degree_keys: [],
       expected_duration_low: 16,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'This class does not have significant prerequisites before participation. In lieu of readiness questions, the following bullet points describe the tasks you will complete as part of this class; you may use this description of tasks to evaluate your readiness to take this class.\n\n* You will analyze and evaluate user interfaces, both ones that we provide and ones that you go out and find on your own.\n\n* You will conduct needfinding exercises to uncover problems that can be address through HCI methods.\n\n* You will prototype user interfaces based on principles you learn within class in response to those needs.\n\n* You will evaluate your user interfaces based on feedback you receive from potential users.\n\n* You will revise your user interfaces accordingly and iterate on the prototyping process.\n\n* You will apply those principles to an emerging area of HCI.',
       syllabus: '###Principles\n- Feedback Cycles and Direct Manipulation\n- Design Principles and Heuristics\n- Mental Models and Distributed Cognition\n\n###Methods\n- Needfinding and Requirements Gathering\n- Low-Fidelity to High-Fidelity Prototyping\n- Predictive, Empirical, and Qualitative Evaluation\n\n###Applications\n- Virtual and Augmented Reality, and others\n- Ubiquitous and Context-Sensitive Computing, and others\n- Healthcare, Education, and Security, and others',
       assistants: [],
       new_release: false,
       available: true,
       project_description: '',
       tags: [],
       full_course_available: false,
       faq: '',
       affiliates: [Object],
       tracks: [Object],
       banner_image: '',
       short_summary: 'This course is an introductory course on human-computer interaction, covering the principles, techniques, and open areas of development in HCI.',
       slug: 'human-computer-interaction--ud400',
       starter: false,
       open_for_enrollment: false,
       level: 'intermediate',
       expected_duration_unit: 'weeks',
       summary: 'This course is an introductory course on human-computer interaction, covering the principles, techniques, and open areas of development in HCI.',
       enables_profiles: false,
       expected_duration: 16 },
     { instructors: [Object],
       subtitle: 'Offered at Georgia Tech as CS 6340',
       key: 'ud333',
       image: 'https://lh3.googleusercontent.com/SUgYAaDunTYB1RIFzSj_qETd665fQDZ-YvqIul0ktREGI1UD7yfG1HhkqYLE4G0ACjFN8fprJv7wFu1wSg=s0#w=1280&h=720',
       expected_duration_high: 0,
       expected_learning: 'Take this course if you need to learn how to test complex, large-scale programs using state of the art testing paradigms.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Software Analysis & Testing',
       related_degree_keys: [],
       expected_duration_low: 16,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'To be prepared for this course, you should be very comfortable with:\n\n* Mathematical and logical reasoning (e.g. basics of set theory, graph theory, boolean algebra, and probability)\n\n* Programming in a high-level language like Java\n\n* Shell scripting on Linux-like operating systems',
       syllabus: '### Testing\n- Principles of random testing.\n- Automatically generating tests.\n\n### Analysis\n- Analyzing dataflows within a program.\n- Analyzing pointers.\n- Analyzing software based on constraints.\n\n### Debugging\n- Basics of type systems.\n- Statistical principles of debugging.\n- Dynamic symbolic execution.',
       assistants: [Object],
       new_release: false,
       available: true,
       project_description: '',
       tags: [],
       full_course_available: false,
       faq: '',
       affiliates: [Object],
       tracks: [Object],
       banner_image: '',
       short_summary: 'This course covers the theory and practice of software analysis, which is at the heart of software development processes such as diagnosing bugs, testing, and debugging.',
       slug: 'software-analysis-testing--ud333',
       starter: false,
       open_for_enrollment: false,
       level: 'intermediate',
       expected_duration_unit: 'weeks',
       summary: 'This course covers the theory and practice of software analysis, which lies at the heart of many software development processes such as diagnosing bugs, testing, debugging, and more. It presents diverse techniques, each with their own strengths and limitations, for automating tasks such as testing, debugging, and finding bugs in complex real-world programs. These techniques include dataflow analysis, constraint-based analysis, type systems, model checking, symbolic execution, and more. The course teaches the principles underlying these techniques as well as imparts hands-on experience with using and implementing tools based on these techniques.',
       enables_profiles: false,
       expected_duration: 16 },
     { instructors: [Object],
       subtitle: 'Offered at Georgia Tech as CS 8803',
       key: 'ud279',
       image: 'https://lh3.googleusercontent.com/pjV2kaEQlQuzZSTR8YwIYyDieRxdfH6i0QfGzSCI1iTawtnhYJmbn2RC0rXdsnSGf6FaoIuLHE11NyFL=s0#w=1280&h=720',
       expected_duration_high: 0,
       expected_learning: 'Take this course if you need to learn the state of the art of designing protections for cyber-physical systems like the power grid, industrial control networks, and autonomous vehicles.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Cyber-Physical Systems Security',
       related_degree_keys: [],
       expected_duration_low: 16,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'Students entering this course should have:\n\n* Knowledge of intermediate programming concepts\n* Knowledge of basic information security concepts',
       syllabus: '### Foundations of Cyber-Physical System Security\n- Computer Networking\n- Information Security\n- Industrial Networks\n\n### Industrial Networks\n- Industrial Cyber Security History\n- Industrial Control Systems and Operations\n- Industrial Network Design, Architecture & Protocols\n\n### Control System Security\n- Hacking & Securing Industrial Control Systems\n- Privacy in Cyber-Physical Systems\n- Threats to Cyber-Physical Systems in Other Domains',
       assistants: [Object],
       new_release: false,
       available: true,
       project_description: '',
       tags: [],
       full_course_available: false,
       faq: '',
       affiliates: [Object],
       tracks: [Object],
       banner_image: '',
       short_summary: 'This course provides an introduction to security issues relating to cyber-physical systems including industrial control systems and critical infrastructures.',
       slug: 'cyber-physical-systems-security--ud279',
       starter: false,
       open_for_enrollment: false,
       level: 'intermediate',
       expected_duration_unit: 'weeks',
       summary: 'This course provides an introduction to security issues relating to various cyber-physical systems including industrial control systems and those considered critical infrastructure systems.',
       enables_profiles: false,
       expected_duration: 16 },
     { instructors: [Object],
       subtitle: 'Offered at Georgia Tech as CS 6262',
       key: 'ud199',
       image: 'https://lh3.googleusercontent.com/DJ8IuJPQ48UdOyoJSs0kup9VP6J1eSa1Gl56U11SKIKKmYLgTbxR4TKZz3p3BM961X2FvqL7vwTBsq912pc=s0#w=1280&h=720',
       expected_duration_high: 0,
       expected_learning: 'You should take this course if you want to:\n\n* Understand the importance of network security in the modern technological world.\n* Create systems that are resistant to modern attacks.\n* Follow the latest trends in attack and defense technologies.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Network Security',
       related_degree_keys: [],
       expected_duration_low: 16,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'To succeed in this course, you should have:\n\n* Intermediate to advanced programming knowledge\n* Knowledge of basic computer networking principles\n* Knowledge of basic information security principles',
       syllabus: '### Large-Scale Attacks\n- DDoS Attacks\n- Malware-Based Attacks, Phishing, &  Fraud\n- Underground infrastructures\n\n### Testing and Security Assessments\n- Penetration Testing\n- Social Engineering and Human Factors\n- Web Security Models & Security and Internet Protocols\n\n### Advanced Topics\n- Evasive and Mobile Malware\n- Botnet detection & Cloud Security\n- Attack-Tolerant Systems',
       assistants: [Object],
       new_release: false,
       available: true,
       project_description: '',
       tags: [],
       full_course_available: false,
       faq: '',
       affiliates: [Object],
       tracks: [Object],
       banner_image: '',
       short_summary: 'This course provides an introduction to computer and network security, including cryptography, cryptanalysis, and systems security.',
       slug: 'network-security--ud199',
       starter: false,
       open_for_enrollment: false,
       level: 'intermediate',
       expected_duration_unit: 'weeks',
       summary: 'The summary for this course comes from the [course web site at Georgia Tech](http://www.cc.gatech.edu/fac/traynor/cs6262/s14/index.html). Note that watching this course on Udacity does not count for Georgia Tech credit unless you are enrolled in the [Georgia Tech OMSCS](http://omscs.gatech.edu/) program.\n\nThis course provides an introduction to computer and network security. Students successfully completing this class will be able to evaluate works in academic and commercial security, and will have rudimentary skills in security research. The course begins with a tutorial of the basic elements of cryptography, cryptanalysis, and systems security, and continues by covering a number of seminal papers and monographs in a wide range of security areas.\n\nTopics covered include network security, authentication, security protocol design and analysis, security modeling, trusted computing, key management, program safety, intrusion detection, DDOS detection and mitigation, architecture/operating systems security, security policy, group systems, biometrics, web security, and other emerging topics.\n\nMost of the course readings will come from seminal papers in the field. Links to these papers will be provided on the course pages. In addition, links to critical reference materials will also be provided.',
       enables_profiles: false,
       expected_duration: 16 },
     { instructors: [Object],
       subtitle: 'Offered at Georgia Tech as CS 8803',
       key: 'ud169',
       image: 'https://lh3.googleusercontent.com/2pkXdwI-G2p0PAAMEk8PSBCfrvv4lHwNeUH_r9Z94ab1ObtKxD7-xZIp0bVgtp9098RUrztffUC0YVtM0w=s0#w=1280&h=720',
       expected_duration_high: 0,
       expected_learning: 'The goal of this course is to take a holistic view of the embedded system stack with a focus on processor architectures, instruction sets and the associated advanced compiler optimizations that take advantage of the same.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Embedded Systems',
       related_degree_keys: [],
       expected_duration_low: 16,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'It is recommended that students who take this course have previously taken at least an undergraduate-level course in computer architecture. In addition, the students must have a strong background in C and/or C++.',
       syllabus: '### Embedded Processor Architectures\n\n- Instruction-Level Parallelism\n- Design of Instruction Set Architectures\n- Embedded Micro-architectures\n\n### Software Optimizations\n\n- Compiler Phases\n- Register Allocation Foundation\n- Register Allocation for Embedded Processors\n\n### Advanced Optimizations\n- Data Layouts for Embedded Processors\n- Data and Code Compaction\n- Network Processors',
       assistants: [Object],
       new_release: false,
       available: true,
       project_description: '',
       tags: [],
       full_course_available: false,
       faq: '',
       affiliates: [Object],
       tracks: [Object],
       banner_image: '',
       short_summary: 'This course takes a holistic view of the embedded system stack focusing on processor architectures, instruction sets, and the associated advanced compiler optimizations.',
       slug: 'embedded-systems--ud169',
       starter: false,
       open_for_enrollment: false,
       level: 'intermediate',
       expected_duration_unit: 'weeks',
       summary: 'In the 21st century, embedded systems are the systems of future with cellular phones, smart-phones, tablets becoming the dominant platforms for computing and communication. The ubiquity of information and the associated need for the computation that accompanies it is driving this revolution only to be accelerated by the new paradigms such as the Internet-of-Things (IoT). These platforms are clearly very different in terms of their processing requirements which are very unique: real-time needs, high performance but at low energy, compact-code and data segments, and most importantly ever changing software stack. Such unique requirements have led to a complete redesign and reinvention of the both hardware and the software stack from ground up, for example, brand new processors such as ARM, DSPs, network processors were invented all the way up to new virtual machines such as Dalvik, new operating systems such as Android and new programming models and compiler optimizations.',
       enables_profiles: false,
       expected_duration: 16 },
     { instructors: [Object],
       subtitle: 'Offered at Georgia Tech as CS 8803',
       key: 'ud168',
       image: 'https://lh3.googleusercontent.com/aB9Db0hWUet66ujOwLLdun_4jjbdj6y-WOea4Hpyh5xXhTGV6JPb1bphI6iIw_BdAl7RIgkgaRR4XJL9K2s=s0#w=1280&h=720',
       expected_duration_high: 0,
       expected_learning: 'Take this course if you need to develop the skills necessary to work on create compilers and similar tools for modern operating systems and devices.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Compilers: Theory and Practice',
       related_degree_keys: [],
       expected_duration_low: 0,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'Good knowledge of data structures and algorithms, good programming skills and ability to write sizeable software in Java or C++. Should be able to work in Linux environment.',
       syllabus: 'This course will cover the following topics:\n\n### Front End\n- Compiler Phases\n- Scanners & Parsers\n- Semantic Analysis\n\n###Middle End\n- Syntax Directed Translation\n- Control Structures and Back-patching\n- Function and Procedure Calls & Runtime Organization\n\n### Back-end\n- Register Allocation & Instruction Selection\n- Code layout and Code Generation\n- Brief Introduction to Code Optimization',
       assistants: [Object],
       new_release: false,
       available: true,
       project_description: '',
       tags: [],
       full_course_available: false,
       faq: '',
       affiliates: [Object],
       tracks: [Object],
       banner_image: '',
       short_summary: 'This course teaches the theory and practice behind building compilers for higher level programming languages.',
       slug: 'compilers-theory-and-practice--ud168',
       starter: false,
       open_for_enrollment: false,
       level: '',
       expected_duration_unit: '',
       summary: 'The objective of this course is to learn the theory and practice behind building automatic translators (compilers) for higher level programming languages and to engineer and build key phases of a compiler in Java or C++ for a small language.',
       enables_profiles: false,
       expected_duration: 0 },
     { instructors: [Object],
       subtitle: 'Offered at Georgia Tech as CS 6400',
       key: 'ud150',
       image: 'https://lh3.googleusercontent.com/YlAbh6M2wVx5gQL3Tk9gjkEULTwGT4SBZTOnHdtGIEF1e2jNma-cHtmfgEsCsCylc0oW67S9gPha8tvP9X9Y=s0#w=1920&h=1080',
       expected_duration_high: 0,
       expected_learning: 'At the end of this course the learner will: <br>\n     •\tUnderstand and apply the concepts of data independence, database and database management system architecture, and the role and placement of a database management system the application stack<br>\n     •\tUnderstand and apply the theoretical foundation of relational databases and query languages to create SQL data structure definitions and queries that meet identified requirements <br>\n     •\t Create a relational database application, including the requirement analysis, specification, design and implementation of relational database applications <br>\n   •\tEvaluate alternative internal schema structures and create indices for efficient database operation <br>\n   •\tUnderstand the concepts of database access control and SQL injection <br>',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Database Systems Concepts & Design',
       related_degree_keys: [],
       expected_duration_low: 16,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'Learners should be familiar with at least one scripting or programming language, e.g. PHP, Python, Java. Some familiarity with software engineering concepts would be helpful. Flexibility to work remotely with team members. <br>\n\nRequired text: <br>\nElmasri & Navathe: Fundamentals of Database Systems. 7th Edition. Pearson 2016.\n\nAdditional course material will be available online.\n\nAdditional Resources:\nWAMP installation guide, and more will be posted online.',
       syllabus: '### Database Concepts\n- Techniques and tools needed to develop database applications.\n- Database application development methodologies.\n\n### Database Models\n- Extended Entity Relationship Models.\n- Relational Models.\n- Relational Algebra, Calculus, and SQL.\n\n### Database Management\n- Database normalization.\n- Database efficiency.\n- Database indexing.\n- Metadata management and archiving.',
       assistants: [Object],
       new_release: false,
       available: true,
       project_description: '',
       tags: [],
       full_course_available: false,
       faq: '',
       affiliates: [Object],
       tracks: [Object],
       banner_image: '',
       short_summary: 'This course presents an example of applying a database application development methodology to a major real-world project.',
       slug: 'database-systems-concepts-design--ud150',
       starter: false,
       open_for_enrollment: false,
       level: 'intermediate',
       expected_duration_unit: 'weeks',
       summary: 'This course presents an example of applying a database application development methodology to a major real-world project.',
       enables_profiles: false,
       expected_duration: 16 },
     { instructors: [Object],
       subtitle: 'Learn to build projects collaboratively',
       key: 'ud456',
       image: 'https://lh3.googleusercontent.com/SqgyN_BqOztfYCwD37mpEYRTQ512hvBJAE-SHJ1pwymi51_8ACi5M9i5TerohyuJw7yrAkZtNbwipvwbVZPa=s0#w=854&h=480',
       expected_duration_high: 0,
       expected_learning: 'You\'ve learned how to develop projects with the amazing version control tool, Git, and it\'s now time to get your repository off of your local machine and up on a hosting service like GitHub! Having your project on GitHub provides an additional backup for your project in case anything should happen to your computer. With your project on a public site like GitHub, you\'re free to share it with other developers. Being able to work together with other developers on a project is vital in today\'s collaborative development processes.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'GitHub & Collaboration',
       related_degree_keys: [],
       expected_duration_low: 3,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'This course builds on the skills covered in the course [Version Control with Git](https://www.udacity.com/course/version-control-with-git--ud123). Students should have experience using Git to:\n\n* create repositories\n* add commits to a repository\n* review a repository\'s history of commits\n* create and manage branches\n* undo changes in a repository',
       syllabus: 'In this course, you\'ll learn the importance of remote repositories. You\'ll create a remote repository on GitHub and then use the command line tool, Git, to connect to, and send changes to this remote repository. You will also learn how to collaborate with others on a version control project. You\'ll fork another developer\'s repository, make changes to it, and send them a pull request. While doing this, you\'ll also pick up so pro tips on how to discover additions and changes that your collaborators have done in the repository. Lastly, you\'ll learn how to use Git to alter a repository\'s history by combining individual commits together in a process called "squashing".\n\n## Lesson 1: Working With Remotes\n* Learn all about remote repositories\n* Connect to a remote repository and send commits to it\n* Get changes from a remote repository \n\n## Lesson 2: Working On Another Dev\'s Repository\n* Fork another developer\'s repository\n* Learn how to review changes other developers have made\n* Determine how best to contribute to a project\n\n## Lesson 3: Staying In Sync With A Remote Project\n* Create and send a pull request\n* Stay in sync with a developing repository\n* Squash commits to update a repository\'s history',
       assistants: [],
       new_release: true,
       available: true,
       project_description: '',
       tags: [Object],
       full_course_available: false,
       faq: '',
       affiliates: [],
       tracks: [Object],
       banner_image: '',
       short_summary: 'Learn how to interact with remote repositories and collaborate with other developers on GitHub.',
       slug: 'github-collaboration--ud456',
       starter: false,
       open_for_enrollment: false,
       level: 'beginner',
       expected_duration_unit: 'weeks',
       summary: 'This course covers the essentials of working with remote repositories. You\'ll be able to connect to a remote repository, get changes from a remote repository, and send changes to a remote repository. You\'ll also learn how to work collaboratively. You\'ll fork another developer\'s repository, make changes to it, and then send them a pull request. You\'ll also pick up some Git tips and tricks that make working with collaborators a breeze.',
       enables_profiles: false,
       expected_duration: 3 },
     { instructors: [Object],
       subtitle: 'Updates to the JavaScript language',
       key: 'ud356',
       image: 'https://lh3.googleusercontent.com/0dC8vDKLvvyHSy-n3zzyts0BzmyYZin9JcdcopObDhlZyOQI2SHVLCGF9S8Mk_qynoxyTAqd16utVWTtpfO5=s0#w=854&h=480',
       expected_duration_high: 0,
       expected_learning: 'The web is constantly changing and with JavaScript as the [most popular programming language](http://stackoverflow.com/research/developer-survey-2016) for both front-end and back-end web development, it\'s important to keep up with the latest advances and improvements in the language. ES6 includes major changes in syntax and language features that can help you write better, cleaner code. Stay up-to-date in the professional world of web development, and learn what\'s happening in JavaScript today.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'ES6 - JavaScript Improved',
       related_degree_keys: [],
       expected_duration_low: 4,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'This course is ideal for developers who have experience with JavaScript and are looking to freshen up their skills. If you plan on learning a new framework like Angular or React, then this course is a perfect way to prepare you for the road ahead.',
       syllabus: 'In this course, you\'ll dive into the latest changes made to the JavaScript programming language with ECMAScript 6 (ES6). You\'ll explore new syntax for declaring variables and constants, use template literals for easier string interpolation, and learn about more efficient ways to work with arrays and objects. You’ll also learn how to write more concise functions using arrow functions and how to simulate the illusion of classes and subclasses in JavaScript. Next, you\'ll look into the most recent additions to the library of JavaScript built-ins including Sets, Maps, Promising, Proxies, and Generators. And finally, you’ll write ES6 code and learn how to use polyfills and the transpiler, Babel, to ensure that your code works in browsers that do not yet support the ES6 language improvements.\n\n## Lesson 1: Syntax\n\n* Learn new ways to define variables\n* Use destructuring to work more efficiently with arrays and objects\n* Explore a new method for looping using the `for...of` loop \n\n## Lesson 2: Functions\n\n* Write cleaner and more concise functions using arrow functions\n* Learn how the `this` keyword behaves when working with arrow functions\n* Explore new ways to create extendable JavaScript classes and subclasses\n\n## Lesson 3: Built-ins\n\n* Experiment with new object types for Sets, Maps, WeakSets, and WeakMaps\n* Handle asynchronous requests using JavaScript Promises\n* Learn how generators can be used to pause the execution of a function while also maintaining its own state\n\n## Lesson 4: Professional developer-fu\n\n* Write ES6 code for unsupported browsers with polyfills and transpilers\n* Use a transpiler to convert ES6 code to ES5 code',
       assistants: [],
       new_release: true,
       available: true,
       project_description: '',
       tags: [Object],
       full_course_available: false,
       faq: '',
       affiliates: [],
       tracks: [Object],
       banner_image: '',
       short_summary: 'Learn about the changes made to the JavaScript programming language in ECMAScript 6 and how to use these new improvements to write better cleaner code.',
       slug: 'es6-javascript-improved--ud356',
       starter: false,
       open_for_enrollment: false,
       level: 'advanced',
       expected_duration_unit: 'weeks',
       summary: 'ECMAScript 6, or ES6, has brought about a ton of changes to the JavaScript programming language. In this course, you\'ll explore those changes to learn about the latest features and improvements to the language including new keywords, arrow functions, the Class syntax, Promises, and so much more. Discover how much cleaner and more concise your JavaScript code can be!',
       enables_profiles: false,
       expected_duration: 4 },
     { instructors: [Object],
       subtitle: 'Learn to track and manage changes',
       key: 'ud123',
       image: 'https://lh3.googleusercontent.com/y-LcILCBJqloH18poJ-YQJ7KiBIfjOIl_kKl0NcWXdRx_TlGrEaXj4YDsf-KCdYS6hSoypSsXaHfv-JhdA=s0#w=1704&h=962',
       expected_duration_high: 0,
       expected_learning: 'Version control is an incredibly important skill that every developer should master, and Git is one of the most popular version control systems used in the workforce. Whether you\'re working as a solo developer or working with a team, being able to track the history of a project is paramount. Tracking versions of your code will help you keep a record of progress and allow you to "undo" any blunders that occur along the way. This is incredibly important in a profession where [~96% of developers](http://stackoverflow.com/research/developer-survey-2016#work-teams) say they work on a team of engineers all working on the same code and [~67% of developers](http://stackoverflow.com/research/developer-survey-2016#work-checking-in-code) report having to check-in changes in their code at least once a day.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Version Control with Git',
       related_degree_keys: [],
       expected_duration_low: 5,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'This course is ideal for developers of all skill levels. Experience with the command line is beneficial, but not required.',
       syllabus: 'In this course, you\'ll learn how important version control is to professional development. You\'ll install the Git shell command and configure it. You\'ll use the `git` command to create repositories that are local to your machine. Using this same command, you\'ll copy existing Git repositories to your computer. You will learn about how important it is to check the status of a repository. You\'ll track changes to projects using small, focused packages called commits. You\'ll learn how to navigate existing commits and the importance of providing clear, descriptive commit messages. You\'ll work on the same project in different situations using branches. Using the `git` command, you\'ll merge branches together and resolve any merge conflicts if they should arise. Lastly, if there are any issues with commits, you\'ll learn how to go back in time to alter, reverse, or totally delete commits.\n\n## Lesson 1: Purpose & Terminology\n* Learn why developers use version control and discover ways you use version control in your daily life\n* Get an overview of essential Git vocabulary\n* Configure Git using the command line\n\n## Lesson 2: Create a Git Repo\n* Create your first Git repository with `git init`\n* Copy an existing Git repository with `git clone`\n* Review the current state of a repository with the powerful `git status`\n\n\n## Lesson 3: Review a Repo\'s History\n* Review a repo\'s commit history`git log`\n* Customize `git log`\'s output using command line flags in order to reveal more (or less) information about each commit\n* Use the `git show` command to display just one commit\n\n## Lesson 4: Add Commits to a Repo\n* Master the Git workflow and make commits to an example project\n* Use `git diff` to identify what parts of a file have been changed in a commit\n* Learn how to mark files as "untracked" using `.gitignore`\n\n## Lesson 5: Tagging, Branching, and Merging\n* Organize your commits with tags and branches\n* Jump to particular tags and branches using `git checkout`\n* Learn how to merge together changes on different branches and crush those pesky merge conflicts\n\n## Lesson 6: Undoing Changes\n* Learn how and when to edit or delete an existing commit\n* Use `git commit`\'s `--amend` flag to alter the last commit\n* Use `git reset` and `git revert` to undo and erase commits',
       assistants: [],
       new_release: false,
       available: true,
       project_description: '',
       tags: [Object],
       full_course_available: false,
       faq: '',
       affiliates: [],
       tracks: [Object],
       banner_image: '',
       short_summary: 'Learn how to use Git, a popular Version Control System and essential tool for any developer.',
       slug: 'version-control-with-git--ud123',
       starter: false,
       open_for_enrollment: false,
       level: 'beginner',
       expected_duration_unit: 'weeks',
       summary: 'This course covers the essentials of using the version control system Git. You\'ll be able to create a new Git repo, commit changes, and review the commit history of an existing repo. You\'ll also learn how to keep your commits organized using tags and branches and you\'ll master the art of merging changes by crushing those pesky merge conflicts. Oh no! Was a mistake made along the way? Learn how to edit commits, revert changes, or even delete commits.',
       enables_profiles: false,
       expected_duration: 5 },
     { instructors: [],
       subtitle: 'Improve your apps with better user data',
       key: 'ud353',
       image: 'https://lh3.googleusercontent.com/Wcx6RDDUzQQNmkEyNmhWb8RTiBQCdgo0KTa2ozyevQoFN5HIs-u-NRzHJLhIgyPcRx9Pd49VJMvxdq65p8A=s0#w=2560&h=1440',
       expected_duration_high: 0,
       expected_learning: 'Firebase Analytics is an analytics solution to help you gain insights on what users are doing with your app. It gives you many different reports and filters to help you understand how your app is progressing toward your goals. Best of all, it\'s free!\n\nIf you are an iOS/Android developer who wants to get more people to use your app, this course is for you! If you have a great idea for an app, this course can help you map out your goals so you can expand your user base using targeted strategies.\n\nOr, if you just want to know more about how developers log user behaviors and make decisions about what to improve, this course is for you, too.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Firebase Analytics: iOS',
       related_degree_keys: [],
       expected_duration_low: 1,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'Some experience with Firebase is highly recommended. Check out [Firebase in a Weekend: iOS](https://www.udacity.com/course/firebase-in-a-weekend-by-google-ios--ud0351) and [Firebase in a Weekend: Android](https://www.udacity.com/course/firebase-in-a-weekend-by-google-android--ud0352) to learn more about Firebase.\n\nYou need to have proficiency in building an iOS mobile application, including experience in basic command line, calling a web or cloud API, working with the view controller life cycle, using multiple view controllers, and working with UITableViewController (iOS Developer Nanodegree or equivalent level). Familiarity working with a web service from iOS, using Core Data, or building apps that use databases will also be helpful.',
       syllabus: '',
       assistants: [],
       new_release: true,
       available: true,
       project_description: '',
       tags: [Object],
       full_course_available: false,
       faq: '',
       affiliates: [Object],
       tracks: [Object],
       banner_image: '',
       short_summary: 'Learn how to grow an app\'s user base using Firebase Analytics, a free and unlimited analytics solution',
       slug: 'firebase-analytics-ios--ud353',
       starter: false,
       open_for_enrollment: false,
       level: 'intermediate',
       expected_duration_unit: 'days',
       summary: 'In this course, you’ll learn how to grow an app\'s user base using Firebase Analytics, a free and unlimited analytics solution. You\'ll be able to learn who your users are and how they interact with your app. You can then use this information to make informed decisions to improve your app, such as how difficult to make a level in a game, where to place an advertisement, or what products to stock.\n\nWe\'ll begin by covering the basics of digital analytics focusing on an app that is live in the App Store and Google Play Store as an example. You\'ll then explore the app\'s actual usage data using the Firebase console. After that, you\'ll learn how easy it is to add Firebase Analytics to an app and quickly gain insights. Finally, you\'ll learn how to use Firebase Crash Reporting, Firebase Remote Config, and Firebase Dynamic Links integrated with Firebase Analytics to improve your app and grow your user base.\n\nBy the end of this course you\'ll have an app that records how users interact with it, and you\'ll know how use that data to improve performance. You\'ll have the foundation needed to apply Firebase Analytics to your own apps.',
       enables_profiles: false,
       expected_duration: 1 },
     { instructors: [],
       subtitle: 'Improve your apps with better user data',
       key: 'ud354',
       image: 'https://lh3.googleusercontent.com/2qud_sfu12EC5-NJq-Jkidg2DEO2yLAjfNBc0Lw-zP0-o4yHgzbCJMEeoyFUx3ZI7qX8KftnlhusS0Jbzd4=s0#w=2560&h=1440',
       expected_duration_high: 0,
       expected_learning: 'Firebase Analytics is an analytics solution to help you gain insights on what users are doing with your app. It gives you many different reports and filters to help you understand how your app is progressing toward your goals. Best of all, it\'s free!\n\nIf you are an iOS/Android developer who wants to get more people to use your app, this course is for you! If you have a great idea for an app, this course can help you map out your goals so you can expand your user base using targeted strategies.\n\nOr, if you just want to know more about how developers log user behaviors and make decisions about what to improve, this course is for you, too.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Firebase Analytics: Android',
       related_degree_keys: [],
       expected_duration_low: 2,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'Some experience with Firebase is highly recommended. Check out [Firebase in a Weekend: iOS](https://www.udacity.com/course/firebase-in-a-weekend-by-google-ios--ud0351) and [Firebase in a Weekend: Android](https://www.udacity.com/course/firebase-in-a-weekend-by-google-android--ud0352) to learn more about Firebase.\n\nYou need to have proficiency in building an iOS mobile application, including experience in basic command line, calling a web or cloud API, working with the view controller life cycle, using multiple view controllers, and working with UITableViewController (iOS Developer Nanodegree or equivalent level). Familiarity working with a web service from iOS, using Core Data, or building apps that use databases will also be helpful.',
       syllabus: '',
       assistants: [],
       new_release: true,
       available: true,
       project_description: '',
       tags: [Object],
       full_course_available: false,
       faq: '',
       affiliates: [Object],
       tracks: [Object],
       banner_image: '',
       short_summary: 'Learn how to grow an app\'s user base using Firebase Analytics, a free and unlimited analytics solution',
       slug: 'firebase-analytics-android--ud354',
       starter: false,
       open_for_enrollment: false,
       level: 'intermediate',
       expected_duration_unit: 'days',
       summary: 'In this course, you’ll learn how to grow an app\'s user base using Firebase Analytics, a free and unlimited analytics solution. You\'ll be able to learn who your users are and how they interact with your app. You can then use this information to make informed decisions to improve your app, such as how difficult to make a level in a game, where to place an advertisement, or what products to stock.\n\nWe\'ll begin by covering the basics of digital analytics focusing on an app that is live in the App Store and Google Play Store as an example. You\'ll then explore the app\'s actual usage data using the Firebase console. After that, you\'ll learn how easy it is to add Firebase Analytics to an app and quickly gain insights. Finally, you\'ll learn how to use Firebase Crash Reporting, Firebase Remote Config, and Firebase Dynamic Links integrated with Firebase Analytics to improve your app and grow your user base.\n\nBy the end of this course you\'ll have an app that records how users interact with it, and you\'ll know how use that data to improve performance. You\'ll have the foundation needed to apply Firebase Analytics to your own apps.',
       enables_profiles: false,
       expected_duration: 2 },
     { instructors: [Object],
       subtitle: 'Add Account Kit and Facebook Login',
       key: 'ud1028',
       image: '',
       expected_duration_high: 0,
       expected_learning: 'Learn how to use tools from Facebook that enable developers to add features to an app that support increased personalization, enable frictionless account creation, and provide a seamless user experience.',
       featured: true,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Passwordless Login Solutions for iOS',
       related_degree_keys: [],
       expected_duration_low: 1,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'To get the most out of this course, you should have at least 3 months experience developing iOS apps in Swift, and familiarity using a third party SDK. If you lack this experience, please take our Intro to iOS App Development with Swift course(https://www.udacity.com/course/intro-to-ios-app-development-with-swift--ud585) prior to enrolling in this one. We also recommend takingSwift for Developers (https://www.udacity.com/course/swift-for-developers--ud1025) if you have experience with iOS Apps but are new to Swift. \n\nTo follow along with course activities, you must create a Facebook for Developers account (https://developers.facebook.com/products/account-creation?utm_source=Udacity&utm_medium=Learn%20Page&utm_campaign=Udacity_Course1), which will provide access to the Facebook Platform.',
       syllabus: '',
       assistants: [],
       new_release: true,
       available: true,
       project_description: '',
       tags: [],
       full_course_available: false,
       faq: '',
       affiliates: [Object],
       tracks: [Object],
       banner_image: '',
       short_summary: '',
       slug: 'passwordless-login-solutions-for-ios--ud1028',
       starter: false,
       open_for_enrollment: false,
       level: 'intermediate',
       expected_duration_unit: 'weeks',
       summary: 'For an app developer, providing a seamless user experience is critical for building engagement and growing a user base. Passwordless login solution provide your users with a simple, secure, and positive first experience.\n\nIn this course, you\'ll learn two frameworks for sign-up and authentication : Account Kit, which uses a phone number and code and Facebook Login for iOS. You’ll learn how to configure both types of authentication side by side in a sample app, test the flow on a series of common use cases and wrap things up with an introduction to Facebook’s Graph API, a window into an incredible wealth of data for creating a more engaging experience for your users.',
       enables_profiles: false,
       expected_duration: 1 },
     { instructors: [Object],
       subtitle: 'Add Account Kit and Facebook Login',
       key: 'ud357',
       image: '',
       expected_duration_high: 0,
       expected_learning: 'Learn how to use tools from Facebook that enable developers to add features to an app that support increased personalization, enable frictionless account creation, and provide a seamless user experience.',
       featured: true,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Passwordless Login Solutions for Android',
              related_degree_keys: [],
       expected_duration_low: 1,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'To get the most out of this course, you should have at least 3 months experience developing Android apps and familiarity using a third party SDK. If you lack this experience, please take our Developing Android Apps course (https://www.udacity.com/course/new-android-fundamentals--ud851) prior to enrolling in this one. \n\n\nTo follow along with course activities, you must create a Facebook for Developers account (https://developers.facebook.com/?utm_source=Udacity&utm_medium=Learn%20Page&utm_campaign=Udacity_Course2), which will provide access to the Facebook Platform.',
       syllabus: '',
       assistants: [],
       new_release: true,
       available: true,
       project_description: '',
       tags: [Object],
       full_course_available: false,
       faq: '',
       affiliates: [Object],
       tracks: [Object],
       banner_image: '',
       short_summary: '',
       slug: 'passwordless-login-solutions-for-android--ud357',
       starter: false,
       open_for_enrollment: false,
       level: 'intermediate',
       expected_duration_unit: 'weeks',
       summary: 'For an app developer, providing a seamless user experience is critical for building engagement and growing a user base. Passwordless login solution provide your users with a simple, secure, and positive first experience.\n\nIn this course, you\'ll learn two frameworks for sign-up and authentication : Account Kit, which uses a phone number and code and Facebook Login for Android. You’ll learn how to configure both types of authentication side by side in a sample app, test the flow on a series of common use cases and wrap things up with an introduction to Facebook’s Graph API, a window into an incredible wealth of data for creating a more engaging experience for your users.',
       enables_profiles: false,
       expected_duration: 1 },
     { instructors: [Object],
       subtitle: 'Getting Started in the Shell',
       key: 'ud206',
       image: 'https://lh3.googleusercontent.com/s2S7Q8NyH4OlJ8Evfgdm08DDn9xyT6gUsbxZd3eN9Fpr9p_QAnZZfocSbgFG0uwvBQC4vElFS_zJ5btSRg=s0#w=1440&h=780',
       expected_duration_high: 0,
       expected_learning: 'Although the Unix shell has an "old school" feel, it remains an important skill, due to the incredible popularity of Unix-like systems: The majority of web servers in the world today run on Linux, and the same `bash` command line is shipped with every Mac computer.\n\nUsing the shell is a prerequisite for many other developer skills including version control (such as `git`) and deployment.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Shell Workshop',
       related_degree_keys: [],
       expected_duration_low: 1,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: '**This is a course for beginners to the shell environment.**\n\nTo take this course, you\'ll need a current Mac, Windows, or Linux computer.\n\nYou should be familiar with elementary programming concepts such as "statement", "variable", "argument to a function", and "file". No particular programming language is required, though.',
       syllabus: '* Using a terminal\n* Working with files and directories\n* Command line options\n* Customizing the shell',
       assistants: [],
       new_release: false,
       available: true,
       project_description: '',
       tags: [],
       full_course_available: false,
       faq: '',
       affiliates: [],
       tracks: [Object],
       banner_image: '',
       short_summary: 'The Unix shell is a valuable tool for developing and deploying software. Learn the basics of this terminal-based, command-line interface.',
       slug: 'shell-workshop--ud206',
       starter: false,
       open_for_enrollment: false,
       level: 'beginner',
       expected_duration_unit: 'days',
       summary: 'A quick, one-lesson introduction to the Unix-style command-line environment.\n\nThis course is intended to get you up to speed on the shell — using a terminal, managing files and directories, and running command-line programs.',
       enables_profiles: false,
       expected_duration: 1 },
     { instructors: [Object],
       subtitle: 'How does HTTP work?',
       key: 'ud303',
       image: 'https://lh3.googleusercontent.com/MQllxxio7I1smqIMnxsa8V_LzaHEi_gOFxlPYhnI0oSzNk8LtLdflV3IPqzk0j4plFb51gX9crjwVHSV3A=s0#w=1440&h=780',
       expected_duration_high: 0,
       expected_learning: 'HTTP is the language of the web. Learning how it works is an essential step to becoming a web developer. It\'s also incredibly handy for _any_ developer, given the omnipresence of HTTP today.\n\nThis course focuses on the backend side of web technology, and at a relatively low level. By writing code that speaks HTTP directly, you will gain a greater understanding of how each piece of the web puzzle fits together.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'HTTP & Web Servers',
       related_degree_keys: [],
       expected_duration_low: 1,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: '**This course is intended for students with a working knowledge of Python, HTML, and the Unix shell. A Mac, Windows, or Linux computer is required.**\n\nIn this course, you will run commands on your computer using a Unix-like shell environment (command line). A basic familiarity with the terminal, working with files and command-line programs, and the `git` version control software will be very useful.\n\nYou will read and write object-oriented Python code using a text editor, and will read Python module documentation to learn about new modules. You will also write code that sends HTML to browsers, so a basic knowledge of HTML markup will come in handy. CSS and JavaScript are not required.\n\nThis course does not use a virtual machine (VM). You will be installing and writing software on your own computer. You will need a text editor and the ability to install software.\n\nElements of this course require communicating with web services including Github and Heroku.',
       syllabus: '### Lesson 1: Requests & Responses\n\nIn this lesson, you\'ll explore HTTP by running a web server on your own computer, then by interacting with servers and browsers from the command line. You\'ll discover HTTP requests and responses, headers, status codes, and other features of the protocol.\n\n### Lesson 2: The Web from Python\n\nIn this lesson, you\'ll write code that speaks HTTP both as a server and a client. You\'ll build Python code that accepts HTML form submissions, accesses web services, and constructs formatted responses.\n\n### Lesson 3: HTTP in the Real World\n\nIn this lesson, you\'ll connect your knowledge of HTTP basics with the rest of the world. You\'ll deploy services you\'ve written so that other people can see them. You\'ll investigate web server capacity, cookies, security, and new developments in the protocol.',
       assistants: [],
       new_release: false,
       available: true,
       project_description: '',
       tags: [Object],
       full_course_available: false,
       faq: '',
       affiliates: [],
       tracks: [Object],
       banner_image: '',
       short_summary: 'HTTP is the fundamental protocol of the Web. Explore how it works using Python code and command-line tools.',
       slug: 'http-web-servers--ud303',
       starter: false,
       open_for_enrollment: false,
       level: 'intermediate',
       expected_duration_unit: 'weeks',
       summary: 'This course is intended for budding full-stack web developers to master the basics of HTTP, the protocol that underlies all web technology.\n\nIn this course, you\'ll explore HTTP directly, talking with web servers and browsers by hand. You\'ll write and deploy low-level web applications in Python. And you\'ll learn more about how HTTP connects with other web technologies.',
       enables_profiles: false,
       expected_duration: 1 },
     { instructors: [],
       subtitle: 'An overview of the VR industry',
       key: 'ud1015',
       image: 'https://lh3.googleusercontent.com/rgCv03j35-wzhpqaqLETE54WdmgMQXzESGO5OfbzgPnApOq3CF9xsvfAem1DYwaVGLmbJ4u9_NTRzgXHXO7Y=s0#w=1724&h=1060',
       expected_duration_high: 0,
       expected_learning: 'This course will teach you about key concepts and terminology such as Lightfield Displays or Foveated Rendering that may be asked of you in VR job interviews. By taking the course, you will either experience the concept in VR or build it for yourself in the Unity Game Engine. You will then be asked to articulate this experience to your peers, as you would in an interview to give you even more practice with these concepts.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'VR Platforms & Applications',
       related_degree_keys: [],
       expected_duration_low: 2,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: '* Unity programming experience up to the VR Software Development course\n* Design knowledge from the VR Design course',
       syllabus: '',
       assistants: [Object],
       new_release: false,
       available: true,
       project_description: '',
       tags: [],
       full_course_available: false,
       faq: '',
       affiliates: [],
       tracks: [Object],
       banner_image: '',
       short_summary: '',
       slug: 'vr-platforms-applications--ud1015',
       starter: false,
       open_for_enrollment: false,
       level: 'beginner',
       expected_duration_unit: 'weeks',
       summary: 'After taking this course, you should be able to identify the pros & cons of the VR headsets currently on the market, identify future technologies that will increase the immersiveness of VR, and give examples of ways VR will impact certain industries, such as Education or Medicine. Throughout the course, you will be exposed to key concepts that are used in the VR industry such as Lightfield Displays or Foveated Rendering. You will also get a chance to prototype some of these concepts in the Unity Game Engine. At the end of each lesson, you will write a blog post, where you will design a VR applications for the headset of your choice using the concepts we have covered.',
       enables_profiles: false,
       expected_duration: 2 },
     { instructors: [],
       subtitle: '',
       key: 'ud1016',
       image: 'https://lh3.googleusercontent.com/9J_9OIVe-YUa7nu7bpeECe2m-Qn8x4o4tH5R_uEbuikQspE5qx-zE5XTxUw53hmSkOZ4rITz-djpTYbXjg=s0#w=1724&h=1060',
       expected_duration_high: 0,
       expected_learning: 'Taking this course will arm you with a repeatable design process that you can use to make any VR application great.  The techniques and principles taught in the VR design course are easily transferrable to any VR project, and they will enhance any experience.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'VR Design',
       related_degree_keys: [],
       expected_duration_low: 2,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'Beginner Knowledge of C#\nBeginner Knowledge of Unity',
       syllabus: '',
       assistants: [Object],
       new_release: false,
       available: true,
       project_description: '',
       tags: [],
       full_course_available: false,
       faq: '',
       affiliates: [],
       tracks: [Object],
       banner_image: '',
       short_summary: '',
       slug: 'vr-design--ud1016',
       starter: false,
       open_for_enrollment: false,
       level: '',
       expected_duration_unit: 'weeks',
       summary: 'In this course, students will iterate on a single project starting with sketches, user personas, and outlines.  Through the process of user testing and iteration, students will create a highly refined and well-designed virtual reality experience—starting with low-fidelity content and continually improving it based on information from real users. Through the lens of a single application using Unity, user testing, and mobile VR, students will learn about things such as simulator sickness, movement mechanics, audio, user focus, and the overall design process.  Once a student has completed the VR Design course, they are ready to create a well-designed VR experience from inception to final product.',
       enables_profiles: false,
       expected_duration: 2 },
     { instructors: [],
       subtitle: 'Add Life to VR With a Few Lines of Code',
       key: 'ud1014',
       image: 'https://lh3.googleusercontent.com/8OcQ_YMQSsZN83C4hMQJkrSIQX4_r5AYnUM5QOBx_t4v8fdqqwqa-9p5hpBVKY9ili-9uEzdKisuNNXyymwj=s0#w=1552&h=1012',
       expected_duration_high: 0,
       expected_learning: 'Programming is a very important part of making any VR experience feel interactive and immersive. Even if your goal is to become a VR artist or designer, being comfortable looking at code is still a very valuable skill to have. This course will get you ready to start reading and writing VR code using C# and Unity.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'VR Software Development',
       related_degree_keys: [],
       expected_duration_low: 1,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'Prior to enrolling in this course, you should have either completed Students should take our Introduction to Virtual Reality or VR Scenes and Objects courses, or know the material taught in those courses. This includes:\n\n* Understanding how to use the Unity interface\n* Familiarity with the 3D Objects and Materials\n* Familiarity with Mecanim and Creating animations\n* Familiarity with Cameras and Lighting',
       syllabus: '## Lesson 1\nCreate new C# scripts in Unity\nAttach scripts to GameObjects in Unity\nBe able to use the Start and Update functions\nBe able to use the Translate function to move objects\nUse Conditional Programming\n\n\n## Lesson 2\nExplore the Unity documentation\nControl Unity components using scripts\nCreate new objects using scripts\nBe able to use a for loop to create objects with scripts\n\n\n## Lesson 3  \nCreate UI GameObjects and be able to place them in World Space\nBe able to use Unity’s Event System to click an object\nChange scenes using code\n\n\n## Lesson 4 \nBe able to use code to detect when the Trigger is pulled\nCreate a simple rotation animation\nCreate a trigger system in the Animator\nUnderstand different types of variables and when they can be used\nActivate a trigger with code\n\n\n## Lesson 5\nPhysics, Colliders, and Raycasting\nUnity Audio and activating within a script\nUsing Array and Random\n\n\n## Lesson 6\nSee a waypoint system and understand how to use it\nSee a flocking algorithm and understand how to control it\nSee an ocean shader and understand how to control it',
       assistants: [Object],
       new_release: false,
       available: true,
       project_description: '',
       tags: [Object],
       full_course_available: false,
       faq: '',
       affiliates: [],
       tracks: [Object],
       banner_image: '',
       short_summary: 'Learn about the world of virtual reality programming! You will learn the basics of programming in C# and how to use it control virtual reality applications in Unity.',
       slug: 'vr-software-development--ud1014',
       starter: false,
       open_for_enrollment: false,
       level: 'beginner',
       expected_duration_unit: 'months',
       summary: 'This course is designed to teach you how to make your VR experience more dynamic and responsive to your users. You will be exposed to C# programming and using it in the Unity interface. Upon completing this course,, you will have learned basic programming constructs such as methods, loops, variables, and using events and how to apply them in a VR environment.',
       enables_profiles: false,
       expected_duration: 1 },
     { instructors: [Object],
       subtitle: 'Running Swift in the Cloud',
       key: 'ud1031',
       image: '',
       expected_duration_high: 0,
       expected_learning: 'When Apple open-sourced Swift, it created ripples throughout the development community — especially for those who wanted to extend Swift beyond the world of Apple devices. Fast-forward to today and Swift is flourishing as a language for traditional Apple applications as well as server-side applications that run on Linux environments. It is now possible for developers to create end-to-end in Swift. That\'s one language that can power everything from iOS client applications to web servers.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Server-Side Swift',
       related_degree_keys: [],
       expected_duration_low: 4,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'Before taking this course, it is recommended that you have experience making network requests in Swift. Also, any experience using the command-line whether on a macOS or Linux system is very helpful, but not required.',
       syllabus: '',
       assistants: [],
       new_release: false,
       available: true,
       project_description: '',
       tags: [Object],
       full_course_available: false,
       faq: '',
       affiliates: [],
       tracks: [Object],
       banner_image: '',
       short_summary: 'In this course, you\'ll learn how to utilize Swift as a server-side language for building end-to-end applications. That\'s one language (Swift) for the client and server.',
       slug: 'server-side-swift--ud1031',
       starter: false,
       open_for_enrollment: false,
       level: 'intermediate',
       expected_duration_unit: 'days',
       summary: 'In this course, you\'ll learn how to utilize Swift as a server-side language for building end-to-end applications that run on Linux and in the cloud. Whether you’re an Apple developer, a full stack developer, or just getting started with app development, this course offers an opportunity to master server-side Swift, while gaining vital transferable skills that can be used for any server-side development. Enroll in the course today, and you’ll enjoy a feature-packed learning experience that is fun, informative, and loaded with expert input from our partners at IBM.',
       enables_profiles: false,
       expected_duration: 4 },
     { instructors: [],
       subtitle: '',
       key: 'ud843',
       image: 'https://lh3.googleusercontent.com/Hp4UrpBlkIwM1VvtEOVAOaTZf9C6X0FXX0lKu3jllapJIlIw5hK_3tDzXamszoTC0PG_cswnx8y6EUl1aQ=s0#w=360&h=220',
       expected_duration_high: 0,
       expected_learning: 'With over 1.4 billion Android devices worldwide and 82% market share, Android offers you unprecedented opportunities to build apps that can be used by people around the world.\n\nThe next billion people coming online will interact with the internet for the very first time on a mobile device. Building for Android gives you the best opportunity to reach these users and make an impact -- both in your community, and on the world.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Android Basics: Networking',
       related_degree_keys: [],
       expected_duration_low: 5,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'The only pre-requisites for this course are the <a href="https://www.udacity.com/course/android-development-for-beginners--ud837" target="_blank">Android for Beginners course</a> and the <a href="https://www.udacity.com/course/android-basics-multi-screen-apps--ud839" target="_blank">Android Basics: Multiscreen Apps course</a>. Once you\'ve completed both, you\'ll be ready to continue your education and learn to build networked apps with this course! \n\nAs with those classes, however, you do need a computer that can run Android Studio (see <a href="https://developer.android.com/studio/index.html#Requirements" target="_blank">Android Studio\'s System Requirements</a> for details).',
       syllabus: 'Lesson 1: JSON Parsing\n \nYou\'ll learn how to understand and decode one of the most common data formats on the web! \n\nLesson 2: HTTP Networking\n\nYou\'ll learn how to connect your app to the web. \n\nLesson 3: Threads and Parallelism\n\nYou\'ll learn how to ask your device to do multiple things at once, allowing you to use the network without interrupting your user.',
       assistants: [],
       new_release: true,
       available: true,
       project_description: '',
       tags: [Object],
       full_course_available: false,
       faq: '',
       affiliates: [],
       tracks: [Object],
       banner_image: '',
       short_summary: 'This class teaches the basics of networking using Android, and is a part of the Android Basics Nanodegree by Google.',
       slug: 'android-basics-networking--ud843',
       starter: false,
       open_for_enrollment: false,
       level: 'beginner',
       expected_duration_unit: 'weeks',
       summary: 'This course is a part of the <a href="https://www.udacity.com/course/android-basics-nanodegree-by-google--nd803" target="_blank">Android Basics Nanodegree by Google</a>.\n\nAndroid apps are everywhere and learning to build them can be a fantastic career move. Continue on your Android app development education and learn to build multi-screen apps!\n\nThis course is designed for students who have completed the <a href="https://www.udacity.com/course/android-development-for-beginners--ud837" target="_blank">Android for Beginners course</a> and the <a href="https://www.udacity.com/course/android-basics-multi-screen-apps--ud839" target="_blank">Android Basics: Multiscreen Apps course</a>. You don’t need any programming experience besides that course!\n\nLearning anything new can be tough. We will walk you through the process of making Android apps, but to get the most out of this course, bring your enthusiasm for learning, and budget time on your calendar to learn with us. It will be an adventure!\n\nBy the end of the course, you’ll build an app that gets you up to date earthquake information!\n\nIf you’re curious about the road even farther ahead, these are the free courses that make up the Android Basics Nanodegree, in order: \n\n* <a href="https://www.udacity.com/course/android-development-for-beginners--ud837" target="_blank">Android Basics: User Interface</a>\n* <a href="https://www.udacity.com/course/android-basics-button-clicks--ud836" target="_blank">Android Basics: User Input</a>\n* <a href="https://www.udacity.com/course/android-basics-multi-screen-apps--ud839" target="_blank"> Android Basics: Multiscreen Apps</a>\n* <a href="https://www.udacity.com/course/android-basics-networking--ud843" target="_blank">Android Basics: Networking</a> (This Course)\n* <a href="https://www.udacity.com/course/android-basics-data-storage--ud845" target="_blank">Android Basics: Data Storage</a>',
       enables_profiles: false,
       expected_duration: 5 },
     { instructors: [Object],
       subtitle: 'Analyze Data with Hadoop and MapReduce',
       key: 'ud1000',
       image: 'https://lh3.googleusercontent.com/LZEsP1t-pqTSszFWtnW6GwEHSJysztkRYJhKS9MgaZD8XudvrpwZPSbHCxplxApoLbpROviO4SRaDUp6pRO1=s0#w=1440&h=913',
       expected_duration_high: 0,
       expected_learning: 'Using massive datasets to guide decisions is becoming more and more important for modern businesses. Hadoop and MapReduce are fundamental tools for working with big data. By knowing how to deploy your own Hadoop clusters, you’ll be able to start exploring big data on your own.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Deploying a Hadoop Cluster',
       related_degree_keys: [],
       expected_duration_low: 3,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'This course is intended for students with some experience with Hadoop and MapReduce, Python, and bash commands.\n\nYou’ll have to be able to work with HDFS and write MapReduce programs. You can learn about these in our Intro to [Hadoop and MapReduce course](https://www.udacity.com/course/intro-to-hadoop-and-mapreduce--ud617).\n\nThe MapReduce programs in the course are written in Python. It is possible to use Java and other languages, but we suggest using Python, on the level of our [Intro to Computer Science course](https://www.udacity.com/course/intro-to-computer-science--cs101).\n\nYou’ll also be using remote cloud machines, so you’ll need to know these bash commands:\n\n- ssh\n- scp\n- cat\n- head/tail\n\nYou’ll also need to be able to work in an editor such as vim or nano. You can learn about these in our [Linux Command Line Basics](https://www.udacity.com/course/linux-command-line-basics--ud595) course.',
       syllabus: '### Deploying a Hadoop cluster on Amazon EC2\n\nDeploy a small Hadoop cluster on Amazon EC2 instances.\n \n### Deploy a Hadoop cluster with Ambari\n\nUse Apache Ambari to automatically deploy a larger, more powerful Hadoop cluster.\n\n### On-demand Hadoop clusters\n\nUse Amazon’s ElasticMapReduce to deploy a Hadoop cluster on-demand.\n\n###Project: Analyzing a big dataset with Hadoop and MapReduce\n\nUse Hadoop and MapReduce to analyze a 150 GB dataset of Wikipedia page views.',
       assistants: [Object],
       new_release: false,
       available: true,
       project_description: '',
       tags: [Object],
       full_course_available: false,
       faq: '',
       affiliates: [],
       tracks: [Object],
       banner_image: '',
       short_summary: 'Deploy your own Hadoop cluster to crunch some big data!',
       slug: 'deploying-a-hadoop-cluster--ud1000',
       starter: false,
       open_for_enrollment: false,
       level: 'intermediate',
       expected_duration_unit: 'weeks',
       summary: 'Learn how to tackle big data problems with your own Hadoop clusters! In this course, you’ll deploy Hadoop clusters in the cloud and use them to gain insights from large datasets.',
       enables_profiles: false,
       expected_duration: 3 },
     { instructors: [Object],
       subtitle: 'Seamless Mobile Development',
       key: 'ud1030',
       image: '',
       expected_duration_high: 0,
       expected_learning: 'When supporting apps on the App Store, many problems arise that are not prior to launch — you have to fix bugs affecting users, fulfill feature requests, and ensure your app functions smoothly on every potential device and configuration. This is very challenging, even for professional developers, and it is increasingly more difficult without the proper system in place to iterate, improve, and deliver new versions of your app. In this course, you\'ll learn how to solve problems like these using buddybuild\'s continuous integration and deployment systems.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Continuous Integration and Deployment',
       related_degree_keys: [],
       expected_duration_low: 2,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'Before taking this course, you should be able to:\n\n- Use Git and GitHub from the command line\n- Build simple interfaces using Storyboard, outlets, and actions\n- Programmatically add UI elements, like buttons and labels, to a view controller\n- Run a Xcode project in the iOS simulator\n\nAlso, any familiarity with tests (unit or UI) is useful, but not required.\n\n**Note:** Specific portions of this course show content that requires an Apple Developer Account to demonstrate. However, you don’t need an Apple Developer Account account to view this content, and we don\'t require you to sign-up for one.',
       syllabus: '###Ensuring App Quality with Continuous Integration\nIn this lesson, you’ll setup a continuous integration (CI) system with buddybuild so that you can test your apps like the pros. You\'ll learn how to configure a project with a simplified version of GitFlow, a commonly used Git branching structure well-suited for collaborative, professional projects. Also, you\'ll write unit and UI tests to verify the core functionality of an app.\n\n###Creating a Build, Deploy, and Feedback Loop\nIn this lesson, you’ll continue to improve your development process by configuring a continuous deployment and delivery system using buddybuild. You\'ll learn how to quickly add and provision devices for testing so there is no delay in getting new builds in front of your users. Then, to complete the feedback loop, you\'ll utilize the buddybuildSDK to consolidate issues and requests into a single location with rich visual descriptions and debugging information.',
       assistants: [],
       new_release: false,
       available: true,
       project_description: '',
       tags: [Object],
       full_course_available: false,
       faq: '',
       affiliates: [],
       tracks: [Object],
       banner_image: '',
       short_summary: 'In this course, you\'ll learn how to improve the mobile development process by using continuous integration and deployment.',
       slug: 'continuous-integration-and-deployment--ud1030',
       starter: false,
       open_for_enrollment: false,
       level: 'intermediate',
       expected_duration_unit: 'days',
       summary: 'In this course, you\'ll learn how to automate and improve the mobile development process by using buddybuild\'s continuous integration and deployments tools. While learning these tools, you\'ll write unit and UI tests to ensure app functionality and interface workflows. You\'ll also simplify the steps necessary to deliver test and production versions of your apps into the hands of users.',
       enables_profiles: false,
       expected_duration: 2 },
     { instructors: [Object],
       subtitle: 'Designing for Mobile',
       key: 'ud1027',
       image: '',
       expected_duration_high: 0,
       expected_learning: 'The best apps on the App Store have beautiful, coherent interfaces that are easy-to-use and a joy to navigate. Another important aspect of great interfaces is that they are universal and adapt to the various iOS form factors — from the smallest iPhones to the largest iPads. By taking this course, you will learn how to build interfaces that exhibit these qualities and give users something to rave about.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Building iOS Interfaces',
       related_degree_keys: [],
       expected_duration_low: 2,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'Before taking this course, you should be able to:\n\n- Construct an interface using Storyboard\n- Setup outlets and actions using Storyboard\n- Programmatically add basic UI elements, like buttons and labels, to a view controller\n- Run a Xcode project in the iOS simulator',
       syllabus: '###Creating Adaptive Layouts\nIn this lesson, you’ll learn how to take static interfaces and make them adaptive — so they can be displayed on any iPhone, iPad, or adaptation modes used for multi-tasking. You\'ll also learn the core mechanism for adaptivity, trail collections, and use them to layout your views. By the end of this lesson, you\'ll know how to create adaptive fonts, respond the text direction of a user\'s language, and even completely swap interfaces based on device orientation.',
       assistants: [],
       new_release: false,
       available: true,
       project_description: '',
       tags: [Object],
       full_course_available: false,
       faq: '',
       affiliates: [],
       tracks: [Object],
       banner_image: '',
       short_summary: 'Learn the best practices for creating iOS interfaces. Build adaptive interfaces, animate UI elements, and analyze designs from popular apps on the App Store.',
       slug: 'building-ios-interfaces--ud1027',
       starter: false,
       open_for_enrollment: false,
       level: 'intermediate',
       expected_duration_unit: 'days',
       summary: 'In this course, you\'ll learn the best practices for creating iOS interfaces. You\'ll build adaptive interfaces that conform to different display environments, animate UI elements and view transitions, and analyze designs from popular apps on the App Store.',
       enables_profiles: false,
       expected_duration: 2 },
     { instructors: [Object],
       subtitle: 'Common Problems, Common Solutions',
       key: 'ud1029',
       image: '',
       expected_duration_high: 0,
       expected_learning: 'If an app grows without a stable infrastructure, then it is doomed for failure. To avoid this, developers rely on, and apply, design patterns to control complexity, limit duplication, and build quality, scalable apps. By taking this course, you are preparing yourself to work in larger iOS codebases — utilizing and implementing design patterns to solve bigger and bigger problems.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'iOS Design Patterns',
       related_degree_keys: [],
       expected_duration_low: 2,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'Before taking this course, you should be able to:\n\n- Build multi-view applications using navigation, table, and other view controller subclasses\n- Send and receive data using URL requests\n- Run a Xcode project in the iOS simulator',
       syllabus: '###VIPER Architecture\nIn this lesson, you’ll learn about increasingly popular VIPER architecture. VIPER is a structural design pattern that can be used as a replacement for the Model View Controller (MVC) pattern. VIPER addresses one of the most common problem with MVC, massive view controllers, by splitting up typical MVC responsibilities into more concise and coherent classes.',
       assistants: [],
       new_release: false,
       available: true,
       project_description: '',
       tags: [Object],
       full_course_available: false,
       faq: '',
       affiliates: [],
       tracks: [Object],
       banner_image: '',
       short_summary: 'In this course, you\'ll explore iOS design patterns — the practical and battle-tested solutions to common problems that are used everyday by developers.',
       slug: 'ios-design-patterns--ud1029',
       starter: false,
       open_for_enrollment: false,
       level: '',
       expected_duration_unit: 'days',
       summary: 'In this course, you\'ll explore popular iOS design patterns — the practical and battle-tested solutions to common problems that are used everyday by professional developers. You\'ll take a look at architectures and mechanisms that are used for constructing large, complex apps. And, by the end of this course, you\'ll have accumulated a reliable toolset of patterns that you can apply to your own projects.',
       enables_profiles: false,
       expected_duration: 2 },
     { instructors: [],
       subtitle: 'Learn about the basics of VR',
       key: 'ud1012',
       image: 'https://lh3.googleusercontent.com/eIOkiYRITNN1cfPmJqyHwTGvoCvZCVTBQyTkE0uMSpkqBOja6PWNIRyI_f_-fKpP9I5NA-RipTl8amKEgCbY=s0#w=1725&h=1060',
       expected_duration_high: 0,
       expected_learning: 'The journey to becoming a VR developer starts with mastering the underlying hardware and software principles. This course covers the foundational skills needed to produce professional VR experiences that are comfortable, polished, and performant. \n\n\nVR development is an amazing career, with both demand and salaries rising. Every innovative VR professional relies on a core set of tools and principles. If you’re going to succeed, then you need to master them, too.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Introduction to Virtual Reality',
       related_degree_keys: [],
       expected_duration_low: 2,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'No programming experience is required. If you are new to virtual reality, and ready to start learning about this amazing technology, then this is the perfect place to begin! We will teach and use the Unity platform to edit a VR app, so you should have access to a computer running Mac OS X (10.8+) or Windows (7, 8, or 10).',
       syllabus: '### What is VR?\n- Learn the basic history of VR development \n- Learn the physical principles of VR including display, optics and orientation tracking\n- Understand how comfort & presence play a role in VR development\n \n### Platforms & Paradigms \n- Learn the difference between native, game engines, and web platforms\n- Learn how tracking in VR works \n- Learn about the different platforms currently available for VR development\n\n### Hello World\n- Learn about to install and open a project in the Unity platform\n- Learn how to view, inspect, and gain a basic understanding of the Unity platform interface\n- Install and open an app in Google cardboard',
       assistants: [Object],
       new_release: false,
       available: true,
       project_description: '',
       tags: [Object],
       full_course_available: false,
       faq: '',
       affiliates: [],
       tracks: [Object],
       banner_image: '',
       short_summary: 'If you are interested in learning more about virtual reality, this course will teach you the principles of VR technology and help you understand what you can build in VR.',
       slug: 'introduction-to-virtual-reality--ud1012',
       starter: false,
       open_for_enrollment: false,
       level: 'beginner',
       expected_duration_unit: 'weeks',
       summary: 'This course is designed for students who are new to virtual reality and want to learn about the principles of VR technology including optics, displays, stereopsis, tracking, and major hardware platforms. You don’t need any programming experience to get started. \n\nBy the end of this course, you will have created and deployed a VR application. You will understand the physical principles of VR and you will use that knowledge to create a comfortable, high-performance VR application using Unity.',
       enables_profiles: false,
       expected_duration: 2 },
     { instructors: [],
       subtitle: 'Create game objects in Unity',
       key: 'ud1013',
       image: 'https://lh3.googleusercontent.com/KGHumEwRLoil6snfmGWyIW_UQ_DNyHChIzvvlf_s-BOe1UlJOIdvux4CU_Ic8s-YDb2CzEsRaxqntdez=s0#w=1724&h=1060',
       expected_duration_high: 0,
       expected_learning: 'You want to make beautiful VR experiences that perform well and impress your users. This course teaches how to use models, materials, textures, cameras, animation and lights to make attractive VR environments.. \n\n\nYou’ll design and build a modern apartment and learn VR best-practices along the way. VR development requires a firm knowledge of 3D models and rendering. This course provides the essential 3D pipeline knowledge needed to produce high quality VR applications.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'VR Scenes and Objects',
       related_degree_keys: [],
       expected_duration_low: 2,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'No programming experience is required. We will teach and use the Unity platform to edit a VR app, so you should have access to a computer running Mac OS X (10.8+) or Windows (7, 8, or 10).  Advanced computer skills are helpful, but not required. \n\nFinally, the *most important prerequisite* is a willingness to learn new things, and belief that you can do this!',
       syllabus: '### Game Objects\n- Create game objects in Unity that represent primitives and meshes \n- Establish parent and child relationships between game objects\n\n### Materials\n- Learn how to assign a material to objects\n- Learn how to assign textures to a material\n- Be able to identify the purpose of shaders and how to use them \n- Be able to identify the basic inputs to Unity’s Physically-Based Rendering system and use them\n\n### Animation\n- Learn how to keyframe an animation\n- Learn how to adjust the speed of an animation with curves and the timeline \n- Learn how to differentiate an animation clip from an animation controller\nLearn how to use a script to trigger an animation\n\n### Cameras \n- Be able to inspect the camera component and its properties\n- Create a simple VR camera and understand how stereo rendering is implemented\n- Learn how to implement Google’s VR Camera and understand the advantages of Google’s SDK compared to simple VR camera\n\n### Lights\n- Learn how to add a light game object to a scene and understand the difference between different types of lights\n- Be able to correctly choose between real-time and baked lighting for scene\n- Learn how to implement baked lighting and optimize light maps for mobile VR\n- Learn how to adjust Unity’s Player & Quality settings to reach peak performance on mobile VR',
       assistants: [Object],
       new_release: false,
       available: true,
       project_description: '',
       tags: [Object],
       full_course_available: false,
       faq: '',
       affiliates: [],
       tracks: [Object],
       banner_image: '',
       short_summary: 'Take the first step in Unity and begin to develop VR content. Learn the principles of the Unity platform and help you understand what you can build in VR!',
       slug: 'vr-scenes-and-objects--ud1013',
       starter: false,
       open_for_enrollment: false,
       level: 'beginner',
       expected_duration_unit: 'weeks',
       summary: 'In this course, you’ll learn the the fundamentals of using the Unity Game Engine to build beautiful and performant VR scenes. Starting from basic game objects, you will learn about transforms and materials, so that you can position objects and make them look realistic. Next, you will experiment with animations and cameras in order to make our scenes more engaging in VR. And finally, you will add some complex lighting to your scene to really make your experience really stand out.',
       enables_profiles: false,
       expected_duration: 2 },
     { instructors: [Object],
       subtitle: 'Your First Programming Language',
       key: 'ud1022',
       image: '',
       expected_duration_high: 0,
       expected_learning: 'The beginning of any developer\'s journey is to learn their first programming language. For iOS developers, that journey begins with the Swift programming language. By taking this course, you will learn the basics of Swift and its core features which allow developers to solve problems, construct algorithms, and eventually build feature-rich mobile applications.',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Swift for Beginners',
       related_degree_keys: [],
       expected_duration_low: 7,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'This course assumes no prior programming experience. Basic computer literacy and an understanding of how to navigate the macOS is recommended.',
       syllabus: '###Lesson 1: Variables\nIn this lesson, you’ll learn about one of the most basic building blocks of nearly every programming language — variables. Variables give developers the ability to store information that can be used to control the behavior of an application. By the end of this lesson, you\'ll be able to create and store values using variables.\n###Lesson 2: Strings\nIn this lesson, you’ll learn how to represent a sequence of characters, or in other words, a string! For iOS apps, you\'ll use strings for labels, buttons, and any text in a user interface, but you\'ll also need them for behind-the-scenes processing. By the end of this lesson, you\'ll be able to create and manipulate strings using their powerful built-in features.\n###Lesson 3: If Statements\nIn this lesson, you’ll learn how to control when and how Swift code is executed by using if statements. You\'ll also learn about the counterpart to if statements called "else" statements. By the end of this lesson, you\'ll be able to specify conditions for when Swift code should be executed based on logic that you define.\n###Lesson 4: Functions\nIn this lesson, you’ll learn about functions — the construct which gives developers the ability to organize and reuse code. Understanding functions is a crucial step to becoming an iOS developer, and once you finish this lesson, you\'ll be able to create and use them in Swift.',
       assistants: [],
       new_release: false,
       available: true,
       project_description: '',
       tags: [Object],
       full_course_available: false,
       faq: '',
       affiliates: [],
       tracks: [Object],
       banner_image: '',
       short_summary: 'Learn Swift, Apple\'s programming language for building iOS applications. Start with the basics and work your way towards completing sets of challenges in Swift.',
       slug: 'swift-for-beginners--ud1022',
       starter: false,
       open_for_enrollment: false,
       level: 'beginner',
       expected_duration_unit: 'days',
       summary: 'In this course, you’ll begin learning Swift, Apple\'s programming language for building iOS applications. You\'ll start with fundamentals and work your way towards understanding all the core principles necessary to get started creating your first app. At the end of the course, you\'ll complete a problem set of exercises designed to challenge your understanding of Swift and give you the opportunity to apply what you\'ve learned.',
       enables_profiles: false,
       expected_duration: 7 },
     { instructors: [Object],
       subtitle: 'Your Next Programming Language',
       key: 'ud1025',
       image: '',
       expected_duration_high: 0,
       expected_learning: 'Take this course if you are ready to dive head first into the Swift language and iOS development. If you can\'t wait to make your first app and you are looking for thorough explanations of syntax with plenty of code examples and lots of opportunities for practice, this is the course for you!',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'Swift for Developers',
       related_degree_keys: [],
       expected_duration_low: 7,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'We recommend at least 3 months of experience with any object-oriented programming language.  Individuals with no programming experience should take our course, Swift for Beginners.',
       syllabus: '##Lesson 1\nSwift Basics\nGet to know the Swift types. \nLearn when to use variables and constants. \nPractice syntax with in-browser exercises. \n\n##Lesson 2\nFunctions\nDefine and call functions.\nCorrectly use local and external parameters.\nIdentify parameter types and return types.\n\n##Lesson 3\nSilly Song Prep: Customizing the Lyrics\nPut your new knowledge of functions to work.\nManipulate Swift strings to create funny lyrics.\nWrite the logic for your first iOS app. \n \n##Lesson 4\nSilly Song Prep: Build the UI\nGet comfortable working with Xcode.\nLearn to use UIKit views and controls. \nBuild your first iOS app.',
       assistants: [],
       new_release: false,
       available: true,
       project_description: '',
       tags: [Object],
       full_course_available: false,
       faq: '',
       affiliates: [],
       tracks: [Object],
       banner_image: '',
       short_summary: 'Get a quick practical introduction to Swift programming basics and build your first iOS app!',
       slug: 'swift-for-developers--ud1025',
       starter: false,
       open_for_enrollment: false,
       level: 'intermediate',
       expected_duration_unit: 'days',
       summary: 'This course offers a quick practical introduction to Swift basics, including types, variables, constants, and functions. It combines syntax exercises with hands-on iOS development in Xcode. By the end of the course students will build their first iOS app, an app that creates and displays song lyrics customized to user input.',
       enables_profiles: false,
       expected_duration: 7 },
     { instructors: [Object],
       subtitle: 'Using Constraint-Based Design',
       key: 'ud1026',
       image: '',
       expected_duration_high: 0,
       expected_learning: 'For many developers, AutoLayout can be a curse: a complex system with unpredictable behavior that you can\'t run away from.\n\nThis course will remove the veil of mystery that shrouds AutoLayout. \n\nYou will be able to create any UI for any device. \n\nEven better, you will actually understand what\'s going on!',
       featured: false,
       project_name: '',
       capped: false,
       teaser_video: [Object],
       public_listing: true,
       title: 'AutoLayout',
       related_degree_keys: [],
       expected_duration_low: 6,
       student_groups: [],
       graduate_groups: [],
       required_knowledge: 'You will need to be familiar with UIKit and Storyboards.',
       syllabus: '###Lesson 1 - Welcome to AutoLayout!\n* Learn all the possible ways of laying out a view.\n* Determine how views should adapt when the available screen size changes.\nExplore AutoLayout and constraints — the premiere tools for building adaptive views.\n\n###Lesson 2 - Using AutoLayout\n* Survey various methods for implementing AutoLayout.\n* Use stack views to intuitively construct interfaces without getting muddled in the details.\n\n###Lesson 3 - View Properties\n* Investigate the properties which control how elements are sized using AutoLayout. \n* Examine the nuances of compression resistance and content hugging.\n\n###Lesson 4 - StackViews 101\n* Build and tweak layouts while exploring all the properties of stack views.\n* Modify axes, spacing, alignments, and distributions to arrange contained subviews.\n\n###Lesson 5 - Positioning StackViews\n* Generate and configure constraints using Interface Builder and storyboards.\n* Analyze the interplay between stack views and different UI elements and devices.\n\n###Lesson 6 - Horizontal Layouts\n* Troubleshoot common problems affecting horizontal stack views and elements with similar view properties.\n* Compose interfaces that embed stack views within stack views.\n\n###Lesson 7 - Vertical Layouts\n* Use stack views to experiment with vertical layouts.\n* Recreate an interface from a very well known app!',
       assistants: [],
       new_release: false,
       available: true,
       project_description: '',
       tags: [],
       full_course_available: false,
       faq: '',
       affiliates: [],
       tracks: [Object],
       banner_image: '',
       short_summary: 'With this course, you will learn about AutoLayout and how to use stack views and constraints to create pixel-perfect UIs.',
       slug: 'autolayout--ud1026',
       starter: false,
       open_for_enrollment: false,
       level: 'intermediate',
       expected_duration_unit: 'days',
       summary: 'With this course, you will learn about AutoLayout and how to use stack views and constraints to create pixel-perfect UIs.\n\nAlso, you will take a deep dive and learn about some of the most commonly misunderstood properties affecting layout like distribution, alignment, content hugging, and compression resistance.\n\nThen, you will put all of this knowledge to use and start creating functional interfaces with multiple stack views and UI elements. In fact, you will recreate an interface from a very well known app. And, by the end of this course, you will be ready to create beautiful interfaces from scratch.',
       enables_profiles: false,
       expected_duration: 6 }]}
